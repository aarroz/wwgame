[gd_scene load_steps=40 format=2]

[ext_resource path="res://assets/models/Tiles/prototype_materials/wall_prototype.material" type="Material" id=1]
[ext_resource path="res://assets/simple_fpsplayer/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/scripts/character_manager.gd" type="Script" id=3]
[ext_resource path="res://assets/scripts/EnvironmentalMap_GRID.tres" type="Environment" id=4]
[ext_resource path="res://assets/textures/decal_controls.png" type="Texture" id=5]
[ext_resource path="res://assets/models/Tiles/prototype_materials/prop_prototype.material" type="Material" id=6]
[ext_resource path="res://assets/sounds/Samples/positive.wav" type="AudioStream" id=7]
[ext_resource path="res://assets/models/Tiles/Light/texture_02.png" type="Texture" id=8]
[ext_resource path="res://assets/models/Tiles/Light/texture_10.png" type="Texture" id=9]

[sub_resource type="SpatialMaterial" id=1]
albedo_color = Color( 0.85098, 0.996078, 0.854902, 1 )
emission_enabled = true
emission = Color( 0.94902, 0.992157, 0.921569, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = true

[sub_resource type="GDScript" id=29]
script/source = "extends Spatial

onready var action = $AnimationPlayer

func door_open():
	action.play(\"door_open\")

func door_close():
	action.play_backwards(\"door_open\")

# Example wiring
#func _on_button_1_body_entered(body):
#	if body.is_in_group(\"Player\"):
#		door_open()

func _on_button_1_body_entered(body):
	if body.is_in_group(\"Player\"):
		door_open()

func _on_button_1_body_exited(body):
	if body.is_in_group(\"Player\"):
		door_close()
"

[sub_resource type="SpatialMaterial" id=6]
albedo_texture = ExtResource( 8 )
uv1_triplanar = true

[sub_resource type="CubeMesh" id=31]
size = Vector3( 0.5, 6, 4 )

[sub_resource type="SpatialMaterial" id=7]
albedo_color = Color( 0.8, 0.8, 0.8, 1 )
albedo_texture = ExtResource( 9 )
uv1_scale = Vector3( 1.464, 1.5, 1 )
uv1_offset = Vector3( -0.23, 0.252, 0 )

[sub_resource type="BoxShape" id=3]
extents = Vector3( 0.5, 3, 2 )

[sub_resource type="Animation" id=4]
resource_name = "door_close"
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -4, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=5]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="GDScript" id=30]
script/source = "extends Spatial

onready var animation = $AnimationPlayer

var Input1
var Input2
var AND
# Called when the node enters the scene tree for the first time.
func _ready():
	Input1 = false
	Input2 = false
	AND = false

func door_check():
	if Input1 and Input2 and AND == false:
		animation.play(\"door_open\")
		AND = true
	else:
		pass

func _on_active_range_body_entered(body):
	if body.is_in_group(\"Player\") or body.is_in_group(\"moveable\"):
		Input1 = true
		door_check()

func _on_active_range_body_exited(body):
	Input1 = false
	door_check()

func _on_active_range2_body_entered(body):
	if body.is_in_group(\"Player\"):
		Input2 = true
		door_check()
	else:
		Input2 = false
"

[sub_resource type="CubeMesh" id=8]
size = Vector3( 0.5, 6, 4 )

[sub_resource type="BoxShape" id=9]
extents = Vector3( 0.5, 3, 2 )

[sub_resource type="Animation" id=10]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -4, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=11]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="GDScript" id=12]
script/source = "extends Spatial

onready var action = $AnimationPlayer

func door_open():
	action.play(\"door_open\")

func door_close():
	action.play_backwards(\"door_open\")

func _on_active_range2_body_entered(body):
	if body.is_in_group(\"Player\"):
		door_open()
"

[sub_resource type="Animation" id=13]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -4, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=14]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="CylinderShape" id=15]
radius = 1.5
height = 0.5

[sub_resource type="CubeMesh" id=16]
material = ExtResource( 6 )

[sub_resource type="BoxShape" id=17]

[sub_resource type="GDScript" id=18]
script/source = "extends Spatial

var button_4
var button_3
var fail_safe
onready var reward_sound = $positive_sound
var global = \"/root/global\"

var level_intro = preload(\"res://assets/scenes/level_intro_prototype.tscn\")
# Called when the node enters the scene tree for the first time.
func _ready():
	button_4 = false
	button_3 = false
	fail_safe = true

func check_end():
	if button_4 and button_3 and fail_safe:
		fail_safe = false
		reward_sound.play()
		yield (reward_sound, \"finished\")
		switch_to()

func switch_to():
	get_node(global).setScene(\"res://assets/scenes/level_intro_prototype.tscn\")

func _on_button_4_body_entered(body):
	if body.is_in_group(\"Player\"):
		button_4 = true
		check_end()
	else:
		pass

func _on_button_4_body_exited(body):
	if body.is_in_group(\"Player\"):
		button_4 = false
		check_end()
	else:
		pass

func _on_button_3_body_entered(body):
	if body.is_in_group(\"Player\"):
		button_3 = true
		check_end()
	else:
		pass

func _on_button_3_body_exited(body):
	if body.is_in_group(\"Player\"):
		button_3 = true
		check_end()
	else:
		pass
"

[sub_resource type="GDScript" id=19]
script/source = "extends Spatial

onready var action = $AnimationPlayer

func door_open():
	action.play(\"door_open\")

func door_close():
	action.play_backwards(\"door_open\")

func _on_button_for_seconddoor_body_entered(body):
	if body.is_in_group(\"Player\") or body.is_in_group(\"moveable\"):
		door_open()

func _on_button_for_seconddoor_body_exited(body):
	door_close()
"

[sub_resource type="CubeMesh" id=20]
size = Vector3( 0.5, 6, 4 )

[sub_resource type="BoxShape" id=21]
extents = Vector3( 0.5, 3, 2 )

[sub_resource type="Animation" id=22]
resource_name = "door_close"
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -4, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=23]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="GDScript" id=24]
script/source = "extends Spatial

onready var action = $AnimationPlayer
var closed = true

func door_open():
	action.play(\"door_open\")

func door_close():
	action.play_backwards(\"door_open\")

func _on_button_for_firstdoor_body_entered(body):
	if body.is_in_group(\"Player\") and closed:
		door_open()
		closed = false
	else:
		pass

func _on_button_for_firstdoor_body_exited(body):
	pass
"

[sub_resource type="Animation" id=25]
resource_name = "door_close"
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -4, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=26]
tracks/0/type = "bezier"
tracks/0/path = NodePath("door:translation:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("door:translation:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -1, -0.25, 0, 0.25, 0, -1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("door:translation:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="CylinderShape" id=28]
radius = 1.5
height = 0.5

[sub_resource type="CylinderShape" id=27]
radius = 1.5
height = 0.5

[node name="level_tutorial" type="Spatial"]
script = ExtResource( 3 )

[node name="layout" type="CSGCombiner" parent="."]
material_override = ExtResource( 1 )
use_in_baked_light = true
use_collision = true

[node name="CSGBox" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -10 )
invert_faces = true
width = 40.0
height = 8.0
depth = 20.0

[node name="CSGBox5" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -40, 0, -10 )
invert_faces = true
width = 40.0
height = 8.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, 10 )
invert_faces = true
width = 20.0
height = 8.0
depth = 20.0

[node name="CSGBox3" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -10, 0, 10 )
invert_faces = true
width = 19.0
height = 8.0
depth = 19.0

[node name="window" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -10, 0, 0 )
invert_faces = true
width = 12.0
height = 2.5

[node name="Sprite3D" type="Sprite3D" parent="layout"]
transform = Transform( -0.1, 0, -1.50996e-07, 0, 0.1, 0, 1.50996e-08, 0, -1, -15, -2, -0.0257437 )
shaded = true
texture = ExtResource( 5 )

[node name="CSGBox4" type="CSGBox" parent="layout"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 10 )
invert_faces = true
width = 1.0
height = 6.0
depth = 4.0

[node name="Player" parent="." instance=ExtResource( 2 )]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -56, -2, -10 )

[node name="Player2" parent="." instance=ExtResource( 2 )]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -12, -2, 11 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 4 )

[node name="lighting" type="Spatial" parent="."]

[node name="fluorescent_light" type="CSGCombiner" parent="lighting"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, -10, 3.89607, 10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight" type="OmniLight" parent="lighting/fluorescent_light"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="fluorescent_light2" type="CSGCombiner" parent="lighting"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -50, 3.89607, -10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight2" type="OmniLight" parent="lighting/fluorescent_light2"]
transform = Transform( -4.37114e-08, 0, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, 1.91069e-15, 9.53674e-07, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="fluorescent_light3" type="CSGCombiner" parent="lighting"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -10, 3.89607, -10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight3" type="OmniLight" parent="lighting/fluorescent_light3"]
transform = Transform( -4.37114e-08, 0, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, 1.91069e-15, 9.53674e-07, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="fluorescent_light7" type="CSGCombiner" parent="lighting"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -30, 3.89607, -10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light7"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light7"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light7"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light7"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight2" type="OmniLight" parent="lighting/fluorescent_light7"]
transform = Transform( -4.37114e-08, 0, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, 1.91069e-15, 9.53674e-07, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="fluorescent_light5" type="CSGCombiner" parent="lighting"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, 10, 3.89607, -10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light5"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light5"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light5"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light5"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight5" type="OmniLight" parent="lighting/fluorescent_light5"]
transform = Transform( -4.37114e-08, 0, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, 1.91069e-15, 9.53674e-07, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="fluorescent_light6" type="CSGCombiner" parent="lighting"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, 10, 3.89607, 10 )
material_override = SubResource( 1 )
cast_shadow = 0
use_in_baked_light = true

[node name="light1" type="CSGCylinder" parent="lighting/fluorescent_light6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.295718, 0, 0 )
radius = 0.1
height = 4.0

[node name="light2" type="CSGCylinder" parent="lighting/fluorescent_light6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0974741, 0, 0 )
radius = 0.1
height = 4.0

[node name="light3" type="CSGCylinder" parent="lighting/fluorescent_light6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.104018, 0, 0 )
radius = 0.1
height = 4.0

[node name="light4" type="CSGCylinder" parent="lighting/fluorescent_light6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.302262, 0, 0 )
radius = 0.1
height = 4.0

[node name="OmniLight5" type="OmniLight" parent="lighting/fluorescent_light6"]
transform = Transform( -4.37114e-08, 0, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, 1.91069e-15, 9.53674e-07, 0, 0.413065 )
shadow_enabled = true
shadow_reverse_cull_face = true
omni_range = 16.0

[node name="Door1" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -10 )
script = SubResource( 29 )

[node name="doorway" type="CSGCombiner" parent="Door1"]
material_override = SubResource( 6 )
use_in_baked_light = true
use_collision = true

[node name="CSGBox" type="CSGBox" parent="Door1/doorway"]
width = 1.0
height = 10.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="Door1/doorway"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03178, 0 )
operation = 2
height = 6.0
depth = 4.0

[node name="door" type="StaticBody" parent="Door1"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Door1/door"]
mesh = SubResource( 31 )
material/0 = SubResource( 7 )

[node name="CollisionShape" type="CollisionShape" parent="Door1/door"]
shape = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Door1"]
anims/door_close = SubResource( 4 )
anims/door_open = SubResource( 5 )

[node name="Door2" type="Spatial" parent="."]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 10, 0, 0 )
script = SubResource( 30 )

[node name="doorway" type="CSGCombiner" parent="Door2"]
use_in_baked_light = true
use_collision = true

[node name="CSGBox" type="CSGBox" parent="Door2/doorway"]
width = 1.0
height = 10.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="Door2/doorway"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03178, 0 )
operation = 2
height = 6.0
depth = 4.0

[node name="door" type="StaticBody" parent="Door2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Door2/door"]
mesh = SubResource( 8 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Door2/door"]
shape = SubResource( 9 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Door2"]
anims/door_close = SubResource( 10 )
anims/door_open = SubResource( 11 )

[node name="Door3" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10 )
script = SubResource( 12 )

[node name="doorway" type="CSGCombiner" parent="Door3"]
visible = false

[node name="CSGBox" type="CSGBox" parent="Door3/doorway"]
width = 1.0
height = 10.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="Door3/doorway"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03178, 0 )
operation = 2
height = 6.0
depth = 4.0

[node name="door" type="StaticBody" parent="Door3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Door3/door"]
mesh = SubResource( 8 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Door3/door"]
shape = SubResource( 9 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Door3"]
anims/door_close = SubResource( 13 )
anims/door_open = SubResource( 14 )

[node name="Button1" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -11, -3, 3 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button1"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button1/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button1/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="button_1" type="Area" parent="Button1"]

[node name="CollisionShape" type="CollisionShape" parent="Button1/button_1"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 15 )

[node name="Button2" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 16, -3, -5 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button2"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button2/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button2/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="active_range" type="Area" parent="Button2"]

[node name="CollisionShape" type="CollisionShape" parent="Button2/active_range"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 15 )

[node name="Button3" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 15, -3, 10 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button3"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button3/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button3/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="button_3" type="Area" parent="Button3"]

[node name="CollisionShape" type="CollisionShape" parent="Button3/button_3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 15 )

[node name="Button4" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5, -3, 10 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button4"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button4/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button4/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="button_4" type="Area" parent="Button4"]

[node name="CollisionShape" type="CollisionShape" parent="Button4/button_4"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 15 )

[node name="Button5" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5, -3, 10 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button5"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button5/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button5/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="active_range2" type="Area" parent="Button5"]

[node name="CollisionShape" type="CollisionShape" parent="Button5/active_range2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 15 )

[node name="Box" type="RigidBody" parent="." groups=[
"moveable",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 16, 0, -16 )
mass = 10.0
can_sleep = false
axis_lock_angular_y = true

[node name="MeshInstance" type="MeshInstance" parent="Box"]
mesh = SubResource( 16 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Box"]
shape = SubResource( 17 )

[node name="Box2" type="RigidBody" parent="." groups=[
"moveable",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -30, 0, -4 )
mass = 10.0
can_sleep = false
axis_lock_angular_y = true

[node name="MeshInstance" type="MeshInstance" parent="Box2"]
mesh = SubResource( 16 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Box2"]
shape = SubResource( 17 )

[node name="you_win" type="Spatial" parent="."]
script = SubResource( 18 )

[node name="positive_sound" type="AudioStreamPlayer" parent="you_win"]
stream = ExtResource( 7 )

[node name="Door4" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -20, 0, -10 )
script = SubResource( 19 )

[node name="doorway" type="CSGCombiner" parent="Door4"]
use_in_baked_light = true
use_collision = true

[node name="CSGBox" type="CSGBox" parent="Door4/doorway"]
width = 1.0
height = 10.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="Door4/doorway"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03178, 0 )
operation = 2
height = 6.0
depth = 4.0

[node name="door" type="StaticBody" parent="Door4"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Door4/door"]
mesh = SubResource( 20 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Door4/door"]
shape = SubResource( 21 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Door4"]
anims/door_close = SubResource( 22 )
anims/door_open = SubResource( 23 )

[node name="Door5" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -40, 0, -10 )
script = SubResource( 24 )

[node name="doorway" type="CSGCombiner" parent="Door5"]
use_in_baked_light = true
use_collision = true

[node name="CSGBox" type="CSGBox" parent="Door5/doorway"]
width = 1.0
height = 10.0
depth = 20.0

[node name="CSGBox2" type="CSGBox" parent="Door5/doorway"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.03178, 0 )
operation = 2
height = 6.0
depth = 4.0

[node name="door" type="StaticBody" parent="Door5"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Door5/door"]
mesh = SubResource( 20 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Door5/door"]
shape = SubResource( 21 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Door5"]
anims/door_close = SubResource( 25 )
anims/door_open = SubResource( 26 )

[node name="Button6" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -51, -3, -10 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button6"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button6/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button6/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="button_for_firstdoor" type="Area" parent="Button6"]

[node name="CollisionShape" type="CollisionShape" parent="Button6/button_for_firstdoor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 28 )

[node name="Button7" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -30, -3, -17 )

[node name="CSGCombiner" type="CSGCombiner" parent="Button7"]
use_in_baked_light = true
use_collision = true

[node name="button" type="CSGCylinder" parent="Button7/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.668211, 0 )
height = 0.25
sides = 16

[node name="base" type="CSGCylinder" parent="Button7/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
radius = 1.5
height = 0.5
sides = 16

[node name="button_for_seconddoor" type="Area" parent="Button7"]

[node name="CollisionShape" type="CollisionShape" parent="Button7/button_for_seconddoor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.779329, 0 )
shape = SubResource( 27 )
[connection signal="body_entered" from="Button1/button_1" to="Door1" method="_on_button_1_body_entered"]
[connection signal="body_exited" from="Button1/button_1" to="Door1" method="_on_button_1_body_exited"]
[connection signal="body_entered" from="Button2/active_range" to="Door2" method="_on_active_range_body_entered"]
[connection signal="body_exited" from="Button2/active_range" to="Door2" method="_on_active_range_body_exited"]
[connection signal="body_entered" from="Button3/button_3" to="you_win" method="_on_button_3_body_entered"]
[connection signal="body_exited" from="Button3/button_3" to="you_win" method="_on_button_3_body_exited"]
[connection signal="body_entered" from="Button4/button_4" to="you_win" method="_on_button_4_body_entered"]
[connection signal="body_exited" from="Button4/button_4" to="you_win" method="_on_button_4_body_exited"]
[connection signal="body_entered" from="Button5/active_range2" to="Door3" method="_on_active_range2_body_entered"]
[connection signal="body_entered" from="Button5/active_range2" to="Door2" method="_on_active_range2_body_entered"]
[connection signal="body_entered" from="Button6/button_for_firstdoor" to="Door5" method="_on_button_for_firstdoor_body_entered"]
[connection signal="body_exited" from="Button6/button_for_firstdoor" to="Door5" method="_on_button_for_firstdoor_body_exited"]
[connection signal="body_entered" from="Button7/button_for_seconddoor" to="Door4" method="_on_button_for_seconddoor_body_entered"]
[connection signal="body_exited" from="Button7/button_for_seconddoor" to="Door4" method="_on_button_for_seconddoor_body_exited"]
